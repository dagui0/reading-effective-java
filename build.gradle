/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.12.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {

    // Guava: Google Core Libraries for Java
    implementation "com.google.guava:guava:33.4.0-jre"

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'
    testCompileOnly 'org.projectlombok:lombok:1.18.36'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.36'

    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api libs.commons.math3

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation libs.guava
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

javadoc {
    destinationDir = file("${projectDir}/docs/api")
}

tasks.javadoc {
    options {
        // Set the encoding for the generated Javadoc
        encoding = 'UTF-8'
        // Set the character set for the generated Javadoc
        charSet = 'UTF-8'
        // Set the title for the generated Javadoc
        title = "${project.name} ${project.version}"
        // Set the version for the generated Javadoc
        version = true
    }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.0
    useJUnitPlatform()
}

apply from: "$project.rootDir/native.gradle"
tasks.named('test', setNativeLibPath)
